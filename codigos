[16/12/2024 08:45] Fernando☢️: <!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mostrador de Etapas</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f4f4f4;
        }
        .container {
            width: 80%;
            max-width: 600px;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .stepper {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }
        .step {
            width: 100%;
            text-align: center;
            position: relative;
        }
        .step:not(:last-child)::after {
            content: '';
            position: absolute;
            top: 50%;
            right: -50%;
            width: 100%;
            height: 2px;
            background-color: #ccc;
            z-index: -1;
        }
        .step-number {
            display: inline-block;
            width: 30px;
            height: 30px;
            line-height: 30px;
            border-radius: 50%;
            background-color: #ccc;
            color: #fff;
            margin-bottom: 10px;
        }
        .step.active .step-number {
            background-color: #007bff;
        }
        .step-title {
            font-size: 14px;
            color: #666;
        }
        .step.active .step-title {
            color: #007bff;
        }
        .content {
            display: none;
        }
        .content.active {
            display: block;
        }
        .buttons {
            display: flex;
            justify-content: space-between;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="stepper">
            <div class="step active" data-step="1">
                <div class="step-number">1</div>
                <div class="step-title">Carrinho</div>
            </div>
            <div class="step" data-step="2">
                <div class="step-number">2</div>
                <div class="step-title">Endereço</div>
            </div>
            <div class="step" data-step="3">
                <div class="step-number">3</div>
                <div class="step-title">Pagamento</div>
            </div>
            <div class="step" data-step="4">
                <div class="step-number">4</div>
                <div class="step-title">Confirmação</div>
            </div>
        </div>
        <div class="content active" data-content="1">
            <h2>Carrinho</h2>
            <p>Conteúdo da etapa Carrinho.</p>
        </div>
        <div class="content" data-content="2">
            <h2>Endereço</h2>
            <p>Conteúdo da etapa Endereço.</p>
        </div>
        <div class="content" data-content="3">
            <h2>Pagamento</h2>
            <p>Conteúdo da etapa Pagamento.</p>
        </div>
        <div class="content" data-content="4">
            <h2>Confirmação</h2>
            <p>Conteúdo da etapa Confirmação.</p>
        </div>
        <div class="buttons">
            <button id="prevBtn" onclick="changeStep(-1)">Anterior</button>
            <button id="nextBtn" onclick="changeStep(1)">Próximo</button>
        </div>
    </div>

    <script>
        let currentStep = 1;

        function changeStep(step) {
            const steps = document.querySelectorAll('.step');
            const contents = document.querySelectorAll('.content');

            steps[currentStep - 1].classList.remove('active');
            contents[currentStep - 1].classList.remove('active');

            currentStep += step;

            if (currentStep < 1) {
                currentStep = 1;
            } else if (currentStep > steps.length) {
                currentStep = steps.length;
            }

            steps[currentStep - 1].classList.add('active');
            contents[currentStep - 1].classList.add('active');
        }
    </script>
</body>
</html>
[16/12/2024 08:51] Fernando☢️: <!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Conversor XML para HTML</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        textarea {
            width: 100%;
            height: 200px;
            margin-bottom: 20px;
            padding: 10px;
            font-family: monospace;
            font-size: 14px;
        }
        button {
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .output {
            margin-top: 20px;
        }
        .output textarea {
            height: 300px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Conversor XML para HTML</h1>
        <textarea id="xmlInput" placeholder="Cole seu código XML aqui..."></textarea>
        <button onclick="convertXMLtoHTML()">Converter para HTML</button>
        <div class="output">
            <h2>Código HTML</h2>
            <textarea id="htmlOutput" readonly></textarea>
        </div>
    </div>

    <script>
        function convertXMLtoHTML() {
            const xmlInput = document.getElementById('xmlInput').value;
            const parser = new DOMParser();
            const xmlDoc = parser.parseFromString(xmlInput, 'text/xml');
            const xsltProcessor = new XSLTProcessor();
            const xslStylesheet = `
                <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:output method="html" indent="yes"/>
                    <xsl:template match="/">
                        <html>
                            <body>
                                <xsl:apply-templates/>
                            </body>
                        </html>
                    </xsl:template>
                    <xsl:template match="*">
                        <xsl:element name="{name()}">
                            <xsl:apply-templates select="@* | node()"/>
                        </xsl:element>
                    </xsl:template>
                    <xsl:template match="@*">
                        <xsl:attribute name="{name()}">
                            <xsl:value-of select="."/>
                        </xsl:attribute>
                    </xsl:template>
                </xsl:stylesheet>
            `;
            const xslDoc = parser.parseFromString(xslStylesheet, 'application/xml');
            xsltProcessor.importStylesheet(xslDoc);
            const resultDocument = xsltProcessor.transformToDocument(xmlDoc);
            const serializer = new XMLSerializer();
            const htmlOutput = serializer.serializeToString(resultDocument);
            document.getElementById('htmlOutput').value = htmlOutput;
        }
    </script>
</body>
</html>